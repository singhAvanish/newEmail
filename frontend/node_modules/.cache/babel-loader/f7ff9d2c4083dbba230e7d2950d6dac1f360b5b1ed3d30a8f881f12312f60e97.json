{"ast":null,"code":"var _jsxFileName = \"/Users/avanishkumarsingh/Desktop/emailApp-main/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport CryptoJS from 'crypto-js'; // Import crypto-js for encryption\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [senderEmail, setSenderEmail] = useState('');\n  const [senderPassword, setSenderPassword] = useState('');\n  const [recipientEmails, setRecipientEmails] = useState('');\n  const [subject, setSubject] = useState('');\n  const [body, setBody] = useState('');\n  const [pdfFile, setPdfFile] = useState(null);\n  const [message, setMessage] = useState('');\n\n  // Encryption key (must match the backend key)\n  const SECRET_KEY = 'avi';\n\n  // Function to encrypt data\n  const encryptData = data => {\n    return CryptoJS.AES.encrypt(data, SECRET_KEY).toString();\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Encrypt the app password\n    const encryptedPassword = encryptData(senderPassword);\n\n    // Convert the PDF file to base64\n    const reader = new FileReader();\n    reader.readAsDataURL(pdfFile);\n    reader.onload = async () => {\n      const pdfBase64 = reader.result.split(',')[1]; // Remove the data URL prefix\n\n      // Prepare the data to send to the backend\n      const data = {\n        sender_email: senderEmail,\n        sender_password: encryptedPassword,\n        // Send the encrypted password\n        recipient_emails: recipientEmails.split(',').map(email => email.trim()),\n        subject,\n        body,\n        pdf_file_base64: pdfBase64,\n        pdf_file_name: pdfFile.name\n      };\n      try {\n        // Send the data to the backend\n        const response = await fetch('http://127.0.0.1:5001/send-email', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        });\n        const result = await response.json();\n        if (response.ok) {\n          setMessage(result.message);\n        } else {\n          setMessage(result.error);\n        }\n      } catch (error) {\n        setMessage('Failed to send emails.');\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header bg-primary text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"card-title text-center\",\n              children: \"Send Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"senderEmail\",\n                  className: \"form-label\",\n                  children: \"Sender Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  className: \"form-control\",\n                  id: \"senderEmail\",\n                  value: senderEmail,\n                  onChange: e => setSenderEmail(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"senderPassword\",\n                  className: \"form-label\",\n                  children: \"App Password:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  id: \"senderPassword\",\n                  value: senderPassword,\n                  onChange: e => setSenderPassword(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"recipientEmails\",\n                  className: \"form-label\",\n                  children: \"Recipient Emails (comma-separated):\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"recipientEmails\",\n                  value: recipientEmails,\n                  onChange: e => setRecipientEmails(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"subject\",\n                  className: \"form-label\",\n                  children: \"Subject:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"subject\",\n                  value: subject,\n                  onChange: e => setSubject(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"body\",\n                  className: \"form-label\",\n                  children: \"Body:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: \"form-control\",\n                  id: \"body\",\n                  rows: \"5\",\n                  value: body,\n                  onChange: e => setBody(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"pdfFile\",\n                  className: \"form-label\",\n                  children: \"Attach PDF:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  className: \"form-control\",\n                  id: \"pdfFile\",\n                  accept: \"application/pdf\",\n                  onChange: e => setPdfFile(e.target.files[0]),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary\",\n                  children: \"Send Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3 alert alert-info\",\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"O+5hfWk6c+D3IOmosFsoK9CPGBE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CryptoJS","jsxDEV","_jsxDEV","App","_s","senderEmail","setSenderEmail","senderPassword","setSenderPassword","recipientEmails","setRecipientEmails","subject","setSubject","body","setBody","pdfFile","setPdfFile","message","setMessage","SECRET_KEY","encryptData","data","AES","encrypt","toString","handleSubmit","e","preventDefault","encryptedPassword","reader","FileReader","readAsDataURL","onload","pdfBase64","result","split","sender_email","sender_password","recipient_emails","map","email","trim","pdf_file_base64","pdf_file_name","name","response","fetch","method","headers","JSON","stringify","json","ok","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","rows","accept","files","_c","$RefreshReg$"],"sources":["/Users/avanishkumarsingh/Desktop/emailApp-main/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport CryptoJS from 'crypto-js'; // Import crypto-js for encryption\n\nfunction App() {\n  const [senderEmail, setSenderEmail] = useState('');\n  const [senderPassword, setSenderPassword] = useState('');\n  const [recipientEmails, setRecipientEmails] = useState('');\n  const [subject, setSubject] = useState('');\n  const [body, setBody] = useState('');\n  const [pdfFile, setPdfFile] = useState(null);\n  const [message, setMessage] = useState('');\n\n  // Encryption key (must match the backend key)\n  const SECRET_KEY = 'avi';\n\n  // Function to encrypt data\n  const encryptData = (data) => {\n    return CryptoJS.AES.encrypt(data, SECRET_KEY).toString();\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Encrypt the app password\n    const encryptedPassword = encryptData(senderPassword);\n\n    // Convert the PDF file to base64\n    const reader = new FileReader();\n    reader.readAsDataURL(pdfFile);\n    reader.onload = async () => {\n      const pdfBase64 = reader.result.split(',')[1]; // Remove the data URL prefix\n\n      // Prepare the data to send to the backend\n      const data = {\n        sender_email: senderEmail,\n        sender_password: encryptedPassword, // Send the encrypted password\n        recipient_emails: recipientEmails.split(',').map(email => email.trim()),\n        subject,\n        body,\n        pdf_file_base64: pdfBase64,\n        pdf_file_name: pdfFile.name,\n      };\n\n      try {\n        // Send the data to the backend\n        const response = await fetch('http://127.0.0.1:5001/send-email', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(data),\n        });\n\n        const result = await response.json();\n        if (response.ok) {\n          setMessage(result.message);\n        } else {\n          setMessage(result.error);\n        }\n      } catch (error) {\n        setMessage('Failed to send emails.');\n      }\n    };\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-8\">\n          <div className=\"card\">\n            <div className=\"card-header bg-primary text-white\">\n              <h1 className=\"card-title text-center\">Send Email</h1>\n            </div>\n            <div className=\"card-body\">\n              <form onSubmit={handleSubmit}>\n                {/* Sender Email Field */}\n                <div className=\"mb-3\">\n                  <label htmlFor=\"senderEmail\" className=\"form-label\">\n                    Sender Email:\n                  </label>\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    id=\"senderEmail\"\n                    value={senderEmail}\n                    onChange={(e) => setSenderEmail(e.target.value)}\n                    required\n                  />\n                </div>\n\n                {/* Sender Password Field */}\n                <div className=\"mb-3\">\n                  <label htmlFor=\"senderPassword\" className=\"form-label\">\n                    App Password:\n                  </label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    id=\"senderPassword\"\n                    value={senderPassword}\n                    onChange={(e) => setSenderPassword(e.target.value)}\n                    required\n                  />\n                </div>\n\n                {/* Recipient Emails Field */}\n                <div className=\"mb-3\">\n                  <label htmlFor=\"recipientEmails\" className=\"form-label\">\n                    Recipient Emails (comma-separated):\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"recipientEmails\"\n                    value={recipientEmails}\n                    onChange={(e) => setRecipientEmails(e.target.value)}\n                    required\n                  />\n                </div>\n\n                {/* Subject Field */}\n                <div className=\"mb-3\">\n                  <label htmlFor=\"subject\" className=\"form-label\">\n                    Subject:\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"subject\"\n                    value={subject}\n                    onChange={(e) => setSubject(e.target.value)}\n                    required\n                  />\n                </div>\n\n                {/* Body Field */}\n                <div className=\"mb-3\">\n                  <label htmlFor=\"body\" className=\"form-label\">\n                    Body:\n                  </label>\n                  <textarea\n                    className=\"form-control\"\n                    id=\"body\"\n                    rows=\"5\"\n                    value={body}\n                    onChange={(e) => setBody(e.target.value)}\n                    required\n                  />\n                </div>\n\n                {/* PDF File Field */}\n                <div className=\"mb-3\">\n                  <label htmlFor=\"pdfFile\" className=\"form-label\">\n                    Attach PDF:\n                  </label>\n                  <input\n                    type=\"file\"\n                    className=\"form-control\"\n                    id=\"pdfFile\"\n                    accept=\"application/pdf\"\n                    onChange={(e) => setPdfFile(e.target.files[0])}\n                    required\n                  />\n                </div>\n\n                {/* Submit Button */}\n                <div className=\"d-grid\">\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Send Email\n                  </button>\n                </div>\n              </form>\n\n              {/* Display Message */}\n              {message && (\n                <div className=\"mt-3 alert alert-info\">\n                  {message}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}